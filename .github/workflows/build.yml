name: Build Native Addons

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  release:
    types: [published]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            node-version: '18'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            node-version: '18'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            node-version: '18'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            node-version: '18'
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            node-version: '18'
          - os: macos-latest
            target: x86_64-apple-darwin
            node-version: '18'
          - os: macos-latest
            target: aarch64-apple-darwin
            node-version: '18'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build native addon
        run: napi build --target ${{ matrix.target }} --release
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.node
            index.js
            index.d.ts
          retention-days: 30

  # 构建 Android 平台（需要特殊处理）
  build-android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-linux-android

      - name: Install Android NDK
        uses: android-actions/setup-android@v2

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build Android native addon
        run: napi build --target aarch64-linux-android --release
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true
          ANDROID_NDK_ROOT: ${{ env.ANDROID_NDK_ROOT }}

      - name: Upload Android artifacts
        uses: actions/upload-artifact@v4
        with:
          name: aarch64-linux-android
          path: |
            *.node
            index.js
            index.d.ts
          retention-days: 30

  # 创建发布包
  create-release:
    needs: [build, build-android]
    runs-on: ubuntu-latest
    if: github.event_name == 'release'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Create release package
        run: |
          mkdir -p release

          # 复制基础文件
          cp index.js index.d.ts package.json README.md LICENSE release/

          # 复制所有平台的 .node 文件
          for platform in artifacts/*/; do
            platform_name=$(basename "$platform")
            cp "$platform"/*.node "release/bsdiff-rust.$platform_name.node"
          done

          # 创建发布压缩包
          cd release
          tar -czf "../bsdiff-rust-${{ github.event.release.tag_name }}.tar.gz" .
          zip -r "../bsdiff-rust-${{ github.event.release.tag_name }}.zip" .

      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bsdiff-rust-${{ github.event.release.tag_name }}.tar.gz
          asset_name: bsdiff-rust-${{ github.event.release.tag_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload release assets (zip)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./bsdiff-rust-${{ github.event.release.tag_name }}.zip
          asset_name: bsdiff-rust-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip
