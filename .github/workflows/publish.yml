name: Publish to npm

on:
  release:
    types: [published]
  workflow_run:
    workflows: ['Build Native Addons']
    types: [completed]

jobs:
  build-and-publish:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            node-version: '18'
            flags: '--use-napi-cross'
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            node-version: '18'
            flags: '--use-napi-cross'
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            node-version: '18'
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            node-version: '18'
          - os: macos-15
            target: x86_64-apple-darwin
            node-version: '18'
          - os: macos-15
            target: aarch64-apple-darwin
            node-version: '18'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build native addon
        run: pnpm exec napi build --target ${{ matrix.target }} --platform --release ${{ matrix.flags }}
        env:
          CARGO_NET_GIT_FETCH_WITH_CLI: true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}
          path: |
            *.node
            index.js
            index.d.ts
            package.json
          retention-days: 30

  publish:
    needs: build-and-publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Prepare npm package
        run: |
          # 复制所有平台的 .node 文件到根目录
          for platform in artifacts/*/; do
            platform_name=$(basename "$platform")
            if [ -f "$platform"/*.node ]; then
              # 直接复制 .node 文件，保持原始文件名
              cp "$platform"/*.node ./
              echo "Copied: $(basename "$platform"/*.node)"
            else
              echo "Warning: No .node file found in $platform"
            fi
          done

          # 列出最终文件结构
          echo "Final package structure:"
          ls -la

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
