name: Publish

on:
  workflow_run:
    workflows: ['Zig-Cross-Compile']
    types: [completed]
  workflow_dispatch: # 允许手动触发发布

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.event == 'push' && startsWith(github.event.workflow_run.head_branch, 'v') }}
    # 只在版本标签触发的构建成功时发布

    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: List downloaded artifacts
        run: |
          echo "Downloaded artifacts:"
          ls -la artifacts/ || echo "No artifacts found"
          find artifacts/ -name "*.node" | head -10

      - name: Move artifacts to workspace
        run: |
          # 将下载的 artifacts 移动到工作空间根目录，以便 napi 识别
          find artifacts/ -name "*.node" -exec cp {} ./ \;
          find artifacts/ -name "index.js" -exec cp {} ./ \; || true
          find artifacts/ -name "index.d.ts" -exec cp {} ./ \; || true
          echo "Moved artifacts:"
          ls -la *.node || echo "No .node files found"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.event.workflow_run.head_branch, 'v')
        with:
          tag_name: ${{ github.event.workflow_run.head_branch }}
          name: Release ${{ github.event.workflow_run.head_branch }}
          body: |
            ## 🚀 bsdiff-rust ${{ github.event.workflow_run.head_branch }}

            ### 📦 Native Binaries
            Precompiled native binaries for multiple platforms.

            ### 📥 Installation
            ```bash
            npm install bsdiff-rust@${{ github.event.workflow_run.head_branch }}
            ```
          files: '*.node'
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: |
          # 发布主包
          pnpm publish --access public --no-git-checks

          # 发布平台子包
          for dir in npm/*/; do
            [ -f "$dir/package.json" ] && (cd "$dir" && npm publish --access public --no-git-checks)
          done
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
